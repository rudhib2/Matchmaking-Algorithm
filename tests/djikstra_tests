// #include <catch2/catch_test_macros.hpp>

#include "/workspaces/cs225/cs225_matchmaking/CS225_Matchmaking/src/Graph.h"
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <set>


// attribute - 3rd = attr_attrib
// A~0 compatible with 1-15 (not 0 because it cant be compatible to itself)

// 6, 14, 42?, 51?, 535?

// 4+6+6+8 = 24 
//let's keep threshold 25 



TEST_CASE("Djikstra Test 1 ~ Compatible", "[weight=1]") {
    std::vector<int> vect;
    djikstra(adj_matrix, 4) = vect;
    
        REQUIRE(std::find(vect.begin(), vect.end(), 12) != vect.end());
        REQUIRE(std::find(vect.begin(), vect.end(), 40) != vect.end());
        REQUIRE(std::find(vect.begin(), vect.end(), 49) != vect.end());
        REQUIRE(std::find(vect.begin(), vect.end(), 433) != vect.end());
        REQUIRE(std::find(vect.begin(), vect.end(), 78) == vect.end());
        REQUIRE(std::find(vect.begin(), vect.end(), 8) == vect.end());
        
}

/* ishanvi: i) I'm not sure if I can create a vector inside test cases - i have done this assuming I can, if
not then just make vect that's inside djikstra function a public variable 
ii) i'm also not sure if adj_matrix is accessible
iii) basically if root is 4 then 12, 40, 49 and 433 should be in the compatibility vector (if u check in the
file, the root will be 6 and the compatible vectors will be 14,42,51 and 535 but because of 0-indexing and 
because first row/col in the excel is ids which we don't have in vector, i did -2 for all vals)
iv) 78 and 8 are random ids thats hould not be compatible to 4.
*/
